
BOSPSH_SOURCES="@PROJECT_SOURCE_DIR@/.."

APP_NAME=${1:-'MyApp'}
APP_TYPE=${2:-'cpp'}
APP_PREFIX=${3:-'samples'}

LANG=(cpp opencl opencv)

clear

CDIR=`pwd`

echo
echo '=== Creating a new BarbequeRTRM-managed application from template ==='
echo
echo -n "> Enter application name (use CamelCase, no spaces allowed) [$APP_NAME]: "
read APP_NAME

# Name error handling: CamelCase enforcement
APP_NAME="$(sed -e 's/\b[A-Za-z]/\u\0/g; s/\ //g' <<< $APP_NAME)"
[ x$APP_NAME == x ] && APP_NAME='MyApp'

echo -n "> Select application type (0: CPP, 1: OpenCL, 2: OpenCV) [default=0]: "
read APP_TYPE_ID
[ x$APP_TYPE_ID == x ] && APP_TYPE_ID=0
APP_TYPE=${LANG[$APP_TYPE_ID]}

echo -n "> Select application source sub-folder ["$BOSPSH_SOURCES"/] : "
read APP_PREFIX
[ x$APP_PREFIX == x ] && APP_PREFIX='samples'


APP_PATH=$BOSPSH_SOURCES"/"$APP_PREFIX"/"$APP_TYPE"/"$APP_NAME
if [ -d $APP_PATH ]; then
	echo -n "Creating application directory..."
	mdkir -p $APP_PATH
else
	echo -n "Error: application directory already existing..."
fi


TEMPLATE_DIR="$BOSPSH_SOURCES/barbeque/config/templates"
TEMPLATE_BUILDER="$TEMPLATE_DIR/bbque_template_${LANG[$APP_TYPE]}.bsx"

# Generate the template builder
echo -e "> Generating the template builder..."
cd $TEMPLATE_DIR
./build.sh ${LANG[$APP_TYPE]}

if ! [ $? == 0 ]; then
	echo -e "ERROR: application sources generation failed...\n"
	exit -1
fi

# Move into BOSP source tree root folder
cd $BOSPSH_SOURCES

# Generate the application
echo -e "> Generating the application template...\n"
$TEMPLATE_BUILDER "$BOSPSH_SOURCES" $APP_NAME $APP_PATH

# Trigger a bootstrap to re-configure the building system
make bootstrap

# Move into application folder
cd $APP_PATH

# Open editor for EXC editing
[ xdg-open &>/dev/null ] && \
		xdg-open .       && \
		xdg-open src/${APP_NAME}_exc.cc

# Switch back to original folder, which could be convenient to trigger make
cd $CDIR

# vim: set tabstop=4:
